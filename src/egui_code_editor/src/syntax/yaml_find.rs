use super::Syntax;
use std::collections::BTreeSet;

impl Syntax {
    pub fn yaml_find(keywords: BTreeSet<&'static str>) -> Self {
        Syntax {
            language: "Yaml_Find",
            case_sensitive: true,
            comment: "//",
            comment_multiline: ["/*", "*/"],
            hyperlinks: BTreeSet::from(["http"]),
            keywords: keywords,
            types: BTreeSet::from([
                "text",
                "contents",
                "Option",
                "Result",
                "Error",
                "Box",
                "Cow",
                // Primitives
                "bool",
                "i8",
                "u8",
                "i16",
                "u16",
                "i32",
                "u32",
                "i64",
                "u64",
                "i128",
                "u128",
                "isize",
                "usize",
                "f32",
                "f64",
                "char",
                "str",
                "String",
                // STD Collections
                "Vec",
                "BTreeMap",
                "BTreeSet",
                "BTreeMap",
                "BTreeSet",
                "VecDeque",
                "BinaryHeap",
                "LinkedList",
                // RC
                "Rc",
                "Weak",
                "LazyCell",
                "SyncUnsafeCell",
                "BorrowErrorl",
                "BorrowMutErrorl",
                "Celll",
                "OnceCelll",
                "Refl",
                "RefCelll",
                "RefMutl",
                "UnsafeCell",
                "Exclusive",
                "LazyLock",
                // ARC
                "Arc",
                "Barrier",
                "BarrierWaitResult",
                "Condvar",
                "Mutex",
                "MutexGuard",
                "Once",
                "OnceLock",
                "OnceState",
                "PoisonError",
                "RwLock",
                "RwLockReadGuard",
                "RwLockWriteGuard",
                "WaitTimeoutResult",
                "Weak",
            ]),
            special: BTreeSet::from(["Self", "static", "true", "false"]),
        }
    }
}
